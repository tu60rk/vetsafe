import os
import pandas as pd

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from typing import List

ADMINS = os.getenv("ADMINS")
admins = [int(i) for i in ADMINS.split(",")]


def create_main_menu(user_id: int) -> ReplyKeyboardMarkup:

    lst_buttons = []
    lst_buttons.append(
        [KeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üóù"), KeyboardButton("–°–∫–∏–¥–∫–∞ VetSave üéÅ")]
    )

    lst_buttons.append([KeyboardButton("–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ü§ù"), KeyboardButton("–•–æ—á—É –∑–∞–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–∞ üê±üê∂")])
    if user_id in admins:
        lst_buttons.append([KeyboardButton("–ê–¥–º–∏–Ω–∫–∞")])

    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_admin_menu() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–í—ã–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")])
    lst_buttons.append(
        [
            KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"),
            KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"),
        ]
    )
    lst_buttons.append([KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")])
    lst_buttons.append([KeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏")])
    lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def type_data() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append(
        [KeyboardButton("–î–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–∑—ã–≤–∞–º"), KeyboardButton("–î–∞–Ω–Ω—ã–µ –ø–æ –ø–∏—Ç–æ–º—Ü–∞–º")]
    )
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def type_setting() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append(
        [
            KeyboardButton("–í–∞–∫—Ü–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"),
            KeyboardButton("–ß–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"),
            KeyboardButton("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"),
        ]
    )
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_lk_menu() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append(
        [KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞"), KeyboardButton("–£–¥–∞–ª–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞")]
    )
    lst_buttons.append(
        [
            KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–∏—Ö –ø–∏—Ç–æ–º—Ü–∞—Ö"),
            KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –í–∞—à–µ–º –ø–∏—Ç–æ–º—Ü–µ"),
        ]
    )
    lst_buttons.append(
        [KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"), KeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    )
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_binary_answer(for_lk: str = "") -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç")])
    if for_lk:
        lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_stars() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append(
        [
            KeyboardButton("‚≠êÔ∏è"),
            KeyboardButton("‚≠êÔ∏è‚≠êÔ∏è"),
            KeyboardButton("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"),
            KeyboardButton("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"),
            KeyboardButton("‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"),
        ]
    )
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_go_yes_no() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append(
        [KeyboardButton("–î–∞, –ø–æ—Å–µ—â–∞–ª üî•"), KeyboardButton("–ù–µ—Ç, –Ω–µ –ø–æ—Å–µ—â–∞–ª üòî")]
    )
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_pet_names(
    info_pet: List[List[int]], for_lk: str = ""
) -> ReplyKeyboardMarkup:
    lst_buttons = []
    for pet in info_pet:
        pet_id, pet_name = pet[0], pet[1]
        lst_buttons.append([KeyboardButton(pet_name)])
    if for_lk:
        lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_pet_types(for_lk: str = "", for_find_friend: str = "") -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–ö–æ—à–∫–∞"), KeyboardButton("–°–æ–±–∞–∫–∞")])
    if for_lk:
        lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")])
    if for_find_friend:
        lst_buttons.append([KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_pet_gender(for_lk: str = "", for_find_friend: str = "") -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–ú—É–∂—Å–∫–æ–π"), KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")])
    if for_lk:
        lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")])
    if for_find_friend:
        lst_buttons.append([KeyboardButton("–ù–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è")])
        lst_buttons.append([KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def create_start_comment() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append(
        [KeyboardButton("–†–∞—Å—Å–∫–∞–∑–∞—Ç—å!"), KeyboardButton("–ù–µ —Ö–æ—á—É —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å :(")]
    )
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def dont_visit(for_lk: str = "") -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–ï—â–µ –Ω–µ –ø–æ—Å–µ—â–∞–ª–∏")])
    if for_lk:
        lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def change_pet_information() -> ReplyKeyboardMarkup:

    lst_buttons = []
    lst_buttons.append([KeyboardButton("–æ—Ç–º–µ–Ω–∞")])
    lst_buttons.append([KeyboardButton("–ø–æ–ª"), KeyboardButton("–∫–ª–∏—á–∫–∞")])
    lst_buttons.append(
        [KeyboardButton("–≤–∏–¥ –ø–∏—Ç–æ–º—Ü–∞"), KeyboardButton("–ø–æ—Ä–æ–¥–∞ –ø–∏—Ç–æ–º—Ü–∞")]
    )
    lst_buttons.append(
        [KeyboardButton("–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"), KeyboardButton("—Å—Ç–µ—Ä–∏–ª–∏–∑–æ–≤–∞–Ω–∞/–∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")]
    )
    lst_buttons.append(
        [KeyboardButton("–≤–∞–∫—Ü–∏–Ω–∏—Ä–æ–≤–∞–Ω"), KeyboardButton("–¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏")]
    )
    lst_buttons.append([KeyboardButton("—á–∏–ø–∏—Ä–æ–≤–∞–Ω"), KeyboardButton("–Ω–æ–º–µ—Ä —á–∏–ø–∞")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)


def back_lk() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)

def start_find_animal() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É")])
    lst_buttons.append([KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")])
    lst_buttons.append([KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)

def animal_age() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–î–æ –≥–æ–¥–∞")])
    lst_buttons.append([KeyboardButton("–û—Ç –≥–æ–¥–∞")])
    lst_buttons.append([KeyboardButton("–ù–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è")])
    lst_buttons.append([KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)

def req_list(df:pd.DataFrame) -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")])
    for row in df.values:
        lst_buttons.append([KeyboardButton(f"–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ - {row[0]}, –°—Ç–∞—Ç—É—Å - {row[2]}, –ù–∏–∫ - {row[1]}")])
    
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)

def doing_with_requests() -> ReplyKeyboardMarkup:

    lst_buttons = []
    lst_buttons.append([KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å")])
    lst_buttons.append([KeyboardButton("–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ")])
    lst_buttons.append([KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º")])
    lst_buttons.append([KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∑–∞—è–≤–∫–∞–º")])
    lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)

def request_status() -> ReplyKeyboardMarkup:
    lst_buttons = []
    lst_buttons.append([KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –Ω–∞ '–∑–∞–∫—Ä—ã—Ç–æ'")])
    lst_buttons.append([KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –Ω–∞ '–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ'")])
    lst_buttons.append([KeyboardButton("–ù–∞–∑–∞–¥")])
    lst_buttons.append([KeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=lst_buttons, resize_keyboard=True)